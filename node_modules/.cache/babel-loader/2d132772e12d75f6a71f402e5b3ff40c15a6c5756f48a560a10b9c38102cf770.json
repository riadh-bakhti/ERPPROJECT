{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst clientSlice = createSlice({\n  name: \"client\",\n  initialState: {\n    client: {\n      Logo: \"\",\n      CompanyName: \"\",\n      CompanyAdresse: \"\",\n      CompanyStreet: \"\",\n      CompanyCity: \"\",\n      CompanyState: \"\",\n      CompanyZip: \"\",\n      CompanyCountry: \"\",\n      Gst: \"\",\n      Vat: \"\",\n      WebsiteLink: \"\",\n      Phone: \"\",\n      Mobile: \"\",\n      Email: \"\",\n      Tags: \"\",\n      Id: 0\n    },\n    clientData: []\n  },\n  reducers: {\n    toAddLogo: (state, action) => {\n      state.client.Logo = action.payload;\n    },\n    toAddCompanyName: (state, action) => {\n      state.client.CompanyName = action.payload;\n      state.client.Id = Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n      ;\n    },\n    toAddCompanyAdresse: (state, action) => {\n      state.client.CompanyAdresse = action.payload;\n    },\n    toAddCompanyStreet: (state, action) => {\n      state.client.CompanyStreet = action.payload;\n    },\n    toAddCompanyCity: (state, action) => {\n      state.client.CompanyCity = action.payload;\n    },\n    toAddCompanyState: (state, action) => {\n      state.client.CompanyState = action.payload;\n    },\n    toAddCompanyZip: (state, action) => {\n      state.client.CompanyZip = action.payload;\n    },\n    toAddCompanyCountry: (state, action) => {\n      state.client.CompanyCountry = action.payload;\n    },\n    toAddGst: (state, action) => {\n      state.client.Gst = action.payload;\n    },\n    toAddVat: (state, action) => {\n      state.client.Vat = action.payload;\n    },\n    toAddWebsiteLink: (state, action) => {\n      state.client.WebsiteLink = action.payload;\n    },\n    toAddPhone: (state, action) => {\n      state.client.Phone = action.payload;\n    },\n    toAddMobile: (state, action) => {\n      state.client.Mobile = action.payload;\n    },\n    toAddEmail: (state, action) => {\n      state.client.Email = action.payload;\n    },\n    toAddTags: (state, action) => {\n      state.client.Tags = action.payload;\n    },\n    toAddClientData: (state, action) => {\n      state.clientData.push(action.payload);\n    }\n  }\n});\nexport const {\n  toAddLogo,\n  toAddClientData,\n  toAddCompanyName,\n  toAddCompanyAdresse,\n  toAddCompanyStreet,\n  toAddCompanyCity,\n  toAddCompanyState,\n  toAddCompanyZip,\n  toAddCompanyCountry,\n  toAddGst,\n  toAddVat,\n  toAddWebsiteLink,\n  toAddPhone,\n  toAddTags,\n  toAddMobile,\n  toAddEmail\n} = clientSlice.actions;\nexport default clientSlice.reducer;","map":{"version":3,"names":["createSlice","clientSlice","name","initialState","client","Logo","CompanyName","CompanyAdresse","CompanyStreet","CompanyCity","CompanyState","CompanyZip","CompanyCountry","Gst","Vat","WebsiteLink","Phone","Mobile","Email","Tags","Id","clientData","reducers","toAddLogo","state","action","payload","toAddCompanyName","Math","floor","random","toString","substring","toAddCompanyAdresse","toAddCompanyStreet","toAddCompanyCity","toAddCompanyState","toAddCompanyZip","toAddCompanyCountry","toAddGst","toAddVat","toAddWebsiteLink","toAddPhone","toAddMobile","toAddEmail","toAddTags","toAddClientData","push","actions","reducer"],"sources":["C:/Users/riadh/OneDrive/Bureau/erp/src/redux/clientSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst clientSlice = createSlice({\r\n    name:\"client\",\r\n    initialState: {\r\n        client:{\r\n        Logo:\"\",\r\n        CompanyName: \"\",\r\n        CompanyAdresse: \"\",\r\n        CompanyStreet: \"\",\r\n        CompanyCity: \"\",\r\n        CompanyState: \"\",\r\n        CompanyZip: \"\",\r\n        CompanyCountry: \"\",\r\n        Gst: \"\",\r\n        Vat: \"\",\r\n        WebsiteLink: \"\",\r\n        Phone: \"\",\r\n        Mobile: \"\",\r\n        Email: \"\",\r\n        Tags: \"\",\r\n        Id: 0,\r\n    },\r\n    clientData :[]\r\n\r\n    },\r\n    reducers:{\r\n        toAddLogo: (state,action) => {\r\n            state.client.Logo= action.payload\r\n        },\r\n        toAddCompanyName: (state, action) => {\r\n            state.client.CompanyName = action.payload;\r\n            state.client.Id = Math.floor((1 + Math.random()) * 0x10000)\r\n            .toString(16)\r\n            .substring(1);;\r\n        \r\n        },\r\n        toAddCompanyAdresse: (state, action) => {\r\n            state.client.CompanyAdresse = action.payload;\r\n        },\r\n        toAddCompanyStreet:(state, action) => {\r\n            state.client.CompanyStreet = action.payload;\r\n        },\r\n        toAddCompanyCity:(state,action) => {\r\n            state.client.CompanyCity = action.payload; \r\n        },\r\n        toAddCompanyState:(state,action) => {\r\n            state.client.CompanyState = action.payload; \r\n        }, \r\n        toAddCompanyZip:(state,action) => { \r\n            state.client.CompanyZip = action.payload; \r\n        },\r\n        toAddCompanyCountry:(state,action) => { \r\n            state.client.CompanyCountry = action.payload; \r\n        },  \r\n        toAddGst:(state,action) => { \r\n            state.client.Gst = action.payload;  \r\n        },\r\n        toAddVat:(state,action) => { \r\n            state.client.Vat = action.payload;\r\n        },\r\n        toAddWebsiteLink:(state,action) => {   \r\n            state.client.WebsiteLink = action.payload; \r\n        }, \r\n        toAddPhone:(state,action) => { \r\n            state.client.Phone = action.payload;   \r\n        },\r\n        toAddMobile:(state,action) => {\r\n            state.client.Mobile = action.payload;\r\n        },\r\n        toAddEmail:(state,action) => {\r\n            state.client.Email = action.payload; \r\n        },\r\n        toAddTags:(state,action) => {\r\n            state.client.Tags = action.payload;\r\n        }, \r\n        toAddClientData:(state,action)=> {\r\n            state.clientData.push(action.payload);\r\n        },\r\n\r\n            \r\n    \r\n            \r\n\r\n        }\r\n    }\r\n)\r\nexport const {toAddLogo,toAddClientData, toAddCompanyName, toAddCompanyAdresse, toAddCompanyStreet, toAddCompanyCity, toAddCompanyState, toAddCompanyZip, toAddCompanyCountry, toAddGst, toAddVat, toAddWebsiteLink, toAddPhone, toAddTags, toAddMobile, toAddEmail } = clientSlice.actions\r\nexport default clientSlice.reducer\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}